#!/usr/bin/env node
var restify = require('restify');
var os = require("os")

function respond(req, res, next) {

  	console.log("body",req.body)
  	res.send({"res": "hello" + req.params.name});
  	next();
}

function getMessages(req, res, next) {
  // Resitify currently has a bug which doesn't allow you to set default headers
  // This headers comply with CORS and allow us to server our response to any origin
	res.header("Access-Control-Allow-Origin", "*"); 
	res.header("Access-Control-Allow-Headers", "X-Requested-With");
  // .find() without any arguments, will return all results
  // the `-1` in .sort() means descending order

    res.send({"get":"get"});
}

function postMessage(req, res, next) {
	res.header("Access-Control-Allow-Origin", "*");
	res.header("Access-Control-Allow-Headers", "X-Requested-With");
	// Create a new message model, fill it up and save it to Mongodb
	res.send(req.body);
}

function loginHandler (req, res, next) {
  var body = req.body
  var password = body && body.password
  if(password == "123456"){
    res.send({
      success: true,
      other: {}
    });  
  }else {
    res.send({
      success: false
    });
  }
}

var server = restify.createServer();
server.use(restify.bodyParser());

server.post("/login", loginHandler)

server.get('/hello/:name', respond);
server.put('/hello/:name', respond);
server.post('/hello/:name', respond);
server.head('/hello/:name', respond);

server.get('/messages', getMessages);
server.post('/messages', postMessage);


server.listen(8088, function() {
  	console.log('%s listening at %s', server.name, server.url);
});